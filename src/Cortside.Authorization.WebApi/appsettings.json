{
  "Kestrel": {
    "EndpointDefaults": {
      "Protocols": "Http1AndHttp2"
    }
  },
  "Service": {
    "Name": "authorization-api"
  },
  "Serilog": {
    "Using": [
      "Serilog.Sinks.ApplicationInsights",
      "Serilog.Sinks.Seq",
      "Serilog.Sinks.Console",
      "Serilog.Settings.Configuration"
    ],
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.AspNetCore.Mvc.Internal": "Warning",
        "Microsoft.EntityFrameworkCore": "Information",
        "System": "Information",
        "Cortside.Health.HealthCheckHostedService": "Warning",
        "Cortside.Health.Checks": "Warning",
        "Cortside.DomainEvent": "Verbose",
        "Cortside.RestApiClient": "Verbose"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] [{CorrelationId}][{RequestId}] {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "ApplicationInsights",
        "Args": {
          "restrictedToMinimumLevel": "Debug",
          "telemetryConverter": "Serilog.Sinks.ApplicationInsights.TelemetryConverters.TraceTelemetryConverter, Serilog.Sinks.ApplicationInsights"
        }
      }
    ],
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithEnvironmentUserName",
      "WithThreadId",
      "WithEventType"
    ],
    "Properties": {
      "Application": "authorization-api"
    }
  },
  "ApplicationInsights": {
    "ConnectionString": ""
  },
  "Seq": {
    "ServerUrl": ""
  },
  "HealthCheckHostedService": {
    "Name": "{{Service:Name}}",
    "Enabled": true,
    "Interval": 5,
    "CacheDuration": 30,
    "Checks": [
      {
        "Name": "authorization-db",
        "Type": "dbcontext",
        "Required": true,
        "Interval": 30,
        "Timeout": 5
      },
      {
        "Name": "identityserver",
        "Type": "url",
        "Required": false,
        "Value": "{{IdentityServer:Authority}}/api/health",
        "Interval": 30,
        "Timeout": 5
      }
    ]
  },
  "Database": {
    "ConnectionString": "Data Source=localhost;Initial Catalog=Authorization;Integrated Security=True"
  },
  "ServiceBus": {
    "Protocol": "amqp",
    "Namespace": "localhost",
    "Policy": "admin",
    "Key": "password",
    "Queue": "authorization.queue",
    "Topic": "/exchange/authorization/",
    "Credits": 5
  },
  "IdentityServer": {
    "Authority": "http://localhost:50002",
    "ApiName": "authorization-api",
    "ApiSecret": "secret",
    "RequireHttpsMetadata": false,
    "CacheDuration": "00:10:00",
    "CacheEnabled": true,
    "EnableCaching": true,
    "Authentication": {
      "GrantType": "client_credentials",
      "Scope": "authorization-api",
      "ClientId": "authorization-api",
      "ClientSecret": "secret",
      "SlidingExpiration": 30
    }
  },
  "PolicyServer": {
    "CacheDuration": "0.00:05:00",
    "BasePolicy": "Authorization",
    "PolicyServerUrl": "http://localhost:50001",
    "BasePolicyPrefix": "Authorization"
  },
  "ReceiverHostedService": {
    "Enabled": false,
    "TimedInterval": 60
  },
  "Cors": {
    "Origins": [
      "http://*.cortside.local",
      "https://*.cortside.com",
      "http://localhost:4200",
      "https://localhost:4200"
    ]
  },
  "OutboxHostedService": {
    "BatchSize": 5,
    "Enabled": false,
    "Interval": 5,
    "PurgePublished": false
  },
  "Encryption": {
    "Secret": "*G-KaPdSgVkYp3s6v8y/B?E(H+MbQeTh"
  },
  "Bowdlerizer": [
    {
      "Strategy": "head",
      "Path": "$..Customer.FirstName",
      "Length": 0
    },
    {
      "Strategy": "head",
      "Path": "$..Customer.LastName",
      "Length": 0
    }
  ]
}
